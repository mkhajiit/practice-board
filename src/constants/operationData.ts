import * as tf from '@tensorflow/tfjs';

// 덧셈과 뺄셈을 포함한 160개의 데이터셋
const xs = tf.tensor2d(
  [
    [1, 2, 0],
    [3, 5, 0],
    [4, 6, 0],
    [10, 20, 0],
    [8, 9, 0],
    [12, 8, 0],
    [7, 14, 0],
    [25, 25, 0],
    [50, 50, 0],
    [11, 19, 0],
    [6, 9, 0],
    [15, 5, 0],
    [13, 7, 0],
    [22, 33, 0],
    [18, 42, 0],
    [30, 10, 0],
    [9, 3, 0],
    [3, 4, 0],
    [20, 5, 0],
    [17, 2, 0],
    [5, 8, 1],
    [10, 7, 1],
    [8, 5, 1],
    [20, 10, 1],
    [17, 9, 1],
    [12, 8, 1],
    [25, 20, 1],
    [50, 30, 1],
    [40, 15, 1],
    [19, 5, 1],
    [9, 2, 1],
    [14, 4, 1],
    [18, 8, 1],
    [21, 6, 1],
    [35, 15, 1],
    [28, 18, 1],
    [12, 4, 1],
    [50, 25, 1],
    [60, 30, 1],
    [22, 15, 1],
    [10, 2, 1],
    [18, 9, 1],
    [2, 3, 0],
    [5, 10, 0],
    [6, 8, 0],
    [10, 25, 0],
    [9, 8, 0],
    [15, 10, 0],
    [10, 20, 0],
    [30, 30, 0],
    [45, 55, 0],
    [12, 22, 0],
    [7, 12, 0],
    [20, 10, 0],
    [15, 8, 0],
    [29, 40, 0],
    [21, 38, 0],
    [32, 15, 0],
    [10, 4, 0],
    [5, 6, 0],
    [25, 10, 0],
    [19, 3, 0],
    [8, 12, 1],
    [12, 9, 1],
    [10, 6, 1],
    [25, 15, 1],
    [22, 12, 1],
    [15, 10, 1],
    [30, 25, 1],
    [60, 35, 1],
    [45, 20, 1],
    [22, 8, 1],
    [10, 3, 1],
    [18, 5, 1],
    [23, 10, 1],
    [27, 9, 1],
    [40, 20, 1],
    [35, 22, 1],
    [15, 6, 1],
    [70, 35, 1],
    // 추가 데이터
    [2, 4, 0],
    [6, 7, 0],
    [11, 13, 0],
    [15, 18, 0],
    [20, 25, 0],
    [9, 7, 0],
    [14, 18, 0],
    [27, 29, 0],
    [35, 40, 0],
    [55, 60, 0],
    [3, 8, 0],
    [12, 15, 0],
    [8, 11, 0],
    [24, 30, 0],
    [15, 15, 0],
    [19, 21, 0],
    [33, 35, 0],
    [40, 50, 0],
    [7, 9, 0],
    [17, 22, 0],
    [4, 2, 1],
    [7, 3, 1],
    [12, 5, 1],
    [18, 9, 1],
    [25, 14, 1],
    [6, 5, 1],
    [8, 7, 1],
    [15, 10, 1],
    [20, 18, 1],
    [28, 22, 1],
    [9, 4, 1],
    [14, 8, 1],
    [7, 6, 1],
    [30, 15, 1],
    [17, 10, 1],
    [22, 12, 1],
    [35, 25, 1],
    [50, 20, 1],
    [5, 2, 1],
    [18, 11, 1],
    // 추가 데이터
    [1, 3, 0],
    [3, 4, 0],
    [5, 6, 0],
    [8, 10, 0],
    [12, 15, 0],
    [20, 25, 0],
    [30, 35, 0],
    [40, 45, 0],
    [50, 55, 0],
    [60, 65, 0],
    [70, 75, 0],
    [80, 85, 0],
    [90, 95, 0],
    [100, 105, 0],
    [110, 115, 0],
    [120, 125, 0],
    [130, 135, 0],
    [140, 145, 0],
    [150, 155, 0],
    [160, 165, 0],
    [5, 3, 1],
    [10, 7, 1],
    [15, 9, 1],
    [20, 12, 1],
    [25, 15, 1],
    [30, 18, 1],
    [35, 21, 1],
    [40, 24, 1],
    [45, 27, 1],
    [50, 30, 1],
    [55, 33, 1],
    [60, 36, 1],
    [65, 39, 1],
    [70, 42, 1],
    [75, 45, 1],
    [80, 48, 1],
    [85, 51, 1],
    [90, 54, 1],
    [95, 57, 1],
    [100, 60, 1],
  ],
  [160, 3] // 160개의 샘플, 각 샘플은 3개의 값 (숫자1, 숫자2, 연산자)
);

// 출력값 (덧셈과 뺄셈의 결과)
const ys = tf.tensor2d(
  [
    [3],
    [8],
    [10],
    [30],
    [17],
    [20],
    [21],
    [50],
    [100],
    [30],
    [15],
    [20],
    [20],
    [55],
    [60],
    [40],
    [12],
    [7],
    [25],
    [19],
    [13],
    [3],
    [2],
    [10],
    [8],
    [4],
    [5],
    [20],
    [25],
    [14],
    [7],
    [10],
    [10],
    [15],
    [20],
    [10],
    [8],
    [25],
    [30],
    [7],
    [8],
    [9],
    [5],
    [15],
    [14],
    [35],
    [17],
    [25],
    [30],
    [60],
    [100],
    [34],
    [19],
    [30],
    [23],
    [69],
    [59],
    [47],
    [14],
    [11],
    [35],
    [22],
    [20],
    [21],
    [16],
    [40],
    [34],
    [25],
    [55],
    [95],
    [65],
    [30],
    [13],
    [23],
    [33],
    [36],
    [60],
    [57],
    [21],
    [105],
    // 추가 데이터에 대한 출력값
    [6],
    [13],
    [24],
    [33],
    [45],
    [16],
    [32],
    [56],
    [75],
    [115],
    [11],
    [27],
    [19],
    [54],
    [30],
    [40],
    [68],
    [90],
    [16],
    [39],
    [2],
    [4],
    [7],
    [9],
    [11],
    [1],
    [1],
    [5],
    [2],
    [6],
    [5],
    [6],
    [1],
    [15],
    [7],
    [10],
    [10],
    [30],
    [3],
    [7],
    // 추가 데이터에 대한 출력값
    [4],
    [7],
    [11],
    [18],
    [27],
    [45],
    [65],
    [85],
    [105],
    [125],
    [145],
    [165],
    [185],
    [205],
    [225],
    [245],
    [265],
    [285],
    [305],
    [325],
    [2],
    [3],
    [6],
    [8],
    [10],
    [12],
    [14],
    [16],
    [18],
    [20],
    [22],
    [24],
    [26],
    [28],
    [30],
    [32],
    [34],
    [36],
    [38],
    [40],
  ],
  [160, 1] // 160개의 샘플에 대한 출력값
);

export { xs, ys };
